#version 130
uniform float tick;
out vec4 fragColors;
uniform sampler2D texUnit;
uniform int texOffset;
in vec4 pos;
in float dist;
in vec4 tex;

void main(void)
{
    const float BORDER_WIDTH = 0.005;

    vec3 color = vec3(0.9);

    int specialx = int(mod(1024-tex.x+(1024.0/2)+texOffset, 1024));

    float testa = texture(texUnit, vec2(((tex.y-(1024/16.0)+(1024/4.0)))/(1024.0), (specialx)/1024.0));

    float testb = testa*10.0;
    color = vec3((testb*testb)/5.0, 7.6*testa, 16.0*testa);

    if (pos.y <= -0.5+BORDER_WIDTH) {
        color = vec3(0.8, 0.8, 0.8);

        if (mod(pos.x+0.3, 0.05) < BORDER_WIDTH/2.0 || mod(pos.z+0.3, 0.05) < BORDER_WIDTH/2.0)
            color = vec3(0.4, 0.4, 0.4);
    }

    if (abs(pos.x) > 0.499-BORDER_WIDTH/2.0) {
        color = vec3(0.0, 0.0, 0.0);
    } else if (abs(pos.z) > 0.499-BORDER_WIDTH/2.0 && abs(pos.y) > 0.499-BORDER_WIDTH) {
        color = vec3(0.0, 0.0, 0.0);
    } else if (pos.y > 0.499-BORDER_WIDTH) {
        color = vec3(0.9, 0.88, 0.88);
    }

    if (color.y > 1.0)
        color.y = 1.0;
    if (color.z > 1.0)
        color.z = 1.0;
    if (color.x > 1.0) {
        color.z -= (color.x-1.0)/40.0;
        color.y -= (color.x-1.0)/40.0;

        color.x = 1.0;

    }


    fragColors = vec4(color, 1.0);

}